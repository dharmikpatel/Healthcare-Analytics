<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
  <title>Health Augury</title>

  <link rel="stylesheet" href="css/demo-styles.css" />
  <script src="js/modernizr-1.5.min.js"></script>
	<style>

//body {
  //font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  //position: relative;
 // width: 960px;
//}

div#graph
{
	width:100%;

}
.axis text {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.bar {
  fill: steelblue;
  fill-opacity: .6;
}

.x.axis path {
  display: none;
}
.d3-tip {
  line-height: 1;
  font-weight: bold;
  padding: 12px;
  background: rgba(0, 0, 0, 0.2);
  color: #fff;
  border-radius: 2px;
}

/* Creates a small triangle extender for the tooltip */
.d3-tip:after {
  box-sizing: border-box;
  display: inline;
  font-size: 10px;
  width: 100%;
  line-height: 1;
  color: rgba(0, 0, 0, 0.8);
  content: "\25BC";
  position: absolute;
  text-align: center;
}

/* Style northward tooltips differently */
.d3-tip.n:after {
  margin: -1px 0 0 0;
  top: 100%;
  left: 0;
}

label {
  //position: absolute;
 // top: 10px;
 // right: 10px;
 margin-left:20px;
 //margin-bottom:30px;
 color:#fff;
}

input
{
	height:30px;
	width:25px;
	margin-left:50px;
}

</style>
</head>

<body>
 <header>
   <a href="index.html" class="tutorial-link">Health Augury</a>
 </header>
  <!--===============================Start Demo====================================================-->
<div class="demo-wrapper" style="margin:0 auto; padding:0 auto;">
<!--each tile should specify what page type it opens (to determine which animation) and the corresponding page name it should open-->
  <div class="dashboard clearfix">
    <ul class="tiles">
	
	  
	  <div class="col1 clearfix">
		<li class="tile tile-small tile tile-2 slideTextRight" style="width:100%; margin:25px 0 25px 0;" data-page-type="s-page" data-page-name ="random-restored-page">
          <div><p class="icon-arrow-right"></p></div>
          <div><p>Do YOU know this disease?</p></div>
        </li>
		
		<a href="statewiseStats.html" style="color:#455962; text-decoration:none;">
		<li class="tile tile-small tile tile-2 slideTextRight" style="width:100%; margin-bottom:25px;">
          <div><p class="icon-arrow-right"></p></div>
          <div><p>View all the state wise stats here!</p></div>
        </li>
		</a>
	  
	  </div>
	  <div class="col2 clearfix" style="width:74%;">
		
          <div style="margin:25px 0 25px 0; color:#fff;">			
			<p style="font-size:30px;">Comparative stydy of all the U.S. states for the selected disease:</p>			
		  </div>
		  <div id="graph" style="height:auto;background-color:rgba(255,255,255,0.8);;"><label><input type="checkbox"> Sort values</label><br/></div>
		  
       
	  </div>
      <div class="col3 clearfix" style="float:left;">
		<a href="prediction.html" style="color:#455962; text-decoration:none;">
		<li class="tile tile-small tile tile-2 slideTextRight" style="width:100%; margin:25px 0 25px 0;">
          <div><p class="icon-arrow-right"></p></div>
          <div><p>View the diseases map here!</p></div>
        </li>
		</a>
		<a href="maxInState.html" style="color:#455962; text-decoration:none;">
		<li class="tile tile-small tile tile-2 slideTextRight" style="width:100%; margin-bottom:25px;">
		<div><p class="icon-arrow-right"> </p></div>
		<div><p>Check out top victim states here!</p></div>
		</li>
		</a>
	  </div>
      
    </ul>
  </div><!--end dashboard-->

</div>
<!--====================================end demo wrapper================================================-->
  <script src="js/jquery-1.8.2.min.js"></script>
  <script src="js/scripts_metro.js"></script>
  
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 950 - margin.left - margin.right,
    height = 350 - margin.top - margin.bottom;

var formatPercent = d3.format("f");

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1, 1);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .tickFormat(formatPercent);
tip = d3.tip()
  .attr('class', 'd3-tip')
  .offset([-10, 0])
  .html(function(d) {
    return "<strong>Frequency:</strong> <span style='color:red'>" + d.frequency + "</span>";
  })
var svg = d3.select("#graph").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
svg.call(tip);
d3.json("sortablegraphdata", function(error, data) {

  data.forEach(function(d) {
    d.frequency = +d.frequency;
  });

  x.domain(data.map(function(d) { return d.state; }));
  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Frequency");

  svg.selectAll(".bar")
      .data(data)
    .enter().append("rect")
      .attr("class", "bar")
      .attr("x", function(d) { return x(d.state); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.frequency); })
      .attr("height", function(d) { return height - y(d.frequency); })
.on('mouseover', tip.show)
      .on('mouseout', tip.hide);

  d3.select("input").on("change", change);

  var sortTimeout = setTimeout(function() {
    d3.select("input").property("checked", true).each(change);
  }, 2000);

  function change() {
    clearTimeout(sortTimeout);

    // Copy-on-write since tweens are evaluated after a delay.
    var x0 = x.domain(data.sort(this.checked
        ? function(a, b) { return b.frequency - a.frequency; }
        : function(a, b) { return d3.ascending(a.state, b.state); })
        .map(function(d) { return d.state; }))
        .copy();

    var transition = svg.transition().duration(750),
        delay = function(d, i) { return i * 50; };

    transition.selectAll(".bar")
        .delay(delay)
        .attr("x", function(d) { return x0(d.state); });

    transition.select(".x.axis")
        .call(xAxis)
      .selectAll("g")
        .delay(delay);
  }
});

</script>
</body>
</html>




